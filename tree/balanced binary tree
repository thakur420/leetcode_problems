Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as:
a binary tree in which the depth of the two subtrees of every node never differ by more than 1.

Example 1:
Given the following tree [3,9,20,null,null,15,7]:
    3
   / \
  9  20
    /  \
   15   7
Return true.





/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int isBalanced(TreeNode* root) {
       if(!root)
           return 1;
        int l = isBalanced(root->left);
        if(l==0)
            return 0;
        int r = isBalanced(root->right);
        if(r==0)
            return 0;
        if(abs(l-r)>1)
            return 0;
        return max(l,r)+1;
    }
};
